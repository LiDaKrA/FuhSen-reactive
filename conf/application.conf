# This is the main configuration file for the application.
# ~~~~~

play.http.context = "/fuhsen"

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
play.crypto.secret = "changeme"

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Overridden the maximum content length
play.http.parser.maxMemoryBuffer = 1024K

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# play.http.router = my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.username=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# play.evolutions.enabled=false

# You can disable evolutions for a specific datasource if necessary
# play.evolutions.db.default.enabled=false

#SILK
# ~~~~~
silk.server.url = "http://localhost:9005/silk"
silk.socialApiProject.id = "SocialAPIMappings"
silk.linking.task.person = "linkPerson"

#Engine
# ~~~~~
engine.microtask.url = "http://localhost:9000"${?play.http.context}
engine.enabled.wrappers = "gkb,gplus,twitter,facebook,ebay,tor2web,linkedleaks,occrp,xing"

#Twitter app consumer key and consumer secret
# ~~~~~
twitter.url = "https://api.twitter.com/1.1/users/search.json"
twitter.consumer.key = ""
twitter.consumer.secret = ""
twitter.access.token = ""
twitter.access.secret = ""

#Google Knowledge Base app key
# ~~~~~
gkb.url = "https://kgsearch.googleapis.com/v1/entities:search"
gkb.app.key = ""

#Google Plus app key
# ~~~~~
gplus.user.url = "https://www.googleapis.com/plus/v1/people"
gplus.app.key = ""
yql.url = "http://query.yahooapis.com/v1/public/yql"

silk.transformation.task.gplus.person = "GPlusPersonTransformation"
silk.transformation.task.gplus.organization = "GPlusPersonOrganizationsTransformation"
silk.transformation.task.gplus.place = "GPlusPersonPlacesTransformation"

#ebay
# ~~~~~
ebay.url = "http://svcs.ebay.com/services/search/FindingService/v1"
ebay.app.key = ""

#TOR2WEB
# ~~~~~
play.ws.acceptAnyCertificate = true
tor2web.url = "https://hss3uro2hsxfogfq.onion.to/api/?"
tor2web.app.key = ""

#Facebook
# ~~~~~
facebook.request_code.url = "https://www.facebook.com/dialog/oauth"
facebook.scope = "public_profile,user_friends,email,user_about_me,user_posts"
facebook.login.redirect.uri = "http://localhost:9000"${?play.http.context}"/facebook/code2token"
facebook.cod2accestoken.url = "https://graph.facebook.com/v2.3/oauth/access_token"
facebook.search.url = "https://graph.facebook.com/search"
facebook.search.fields = "id,name,first_name,last_name,age_range,link,gender,locale,picture,timezone,updated_time,verified,email"
facebook.app.key = ""
facebook.app.secret = ""

#Linked Leaks
# ~~~~~
linkedleaks.sparql.endpoint.url = "http://data.ontotext.com/repositories/data-last"

#OCCRP Leaks
# ~~~~~
occrp.search.url = "https://data.occrp.org/api/1/query"
occrp.search.key = ""

# Crawler
# ~~~~~
crawler.nutch.rest.api.url = "http://78.46.86.162:8888"
crawler.elasticsearch.rest.api.url = "http://78.46.86.162:9200"
crawler.elasticsearch.rest.api.search = "http://78.46.86.162:9200/_all/_search"
crawler.darknetmarkets.rest.api.search = "http://176.9.2.51:9200/summary/product/_search"

silk.transformation.task.elasticsearch.hits = "ElasticSearchHitsTransformation"
silk.transformation.task.elasticsearch.annotations = "ElasticSearchAnnotationTransformation"
silk.transformation.task.darknetmarkets.product = "DarknetMarketsProductTransformation"

# PDF-Exporter service
# ~~~~~~~~~~~~~~~~~~~~
snapshot.pdf.rest.api.url = "http://localhost:3000/snapshot"

# Akka
akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  fork-join-executor {
    # The parallelism factor is used to determine thread pool size using the
    # following formula: ceil(available processors * factor). Resulting size
    # is then bounded by the parallelism-min and parallelism-max values.
    parallelism-factor = 3.0

    # Min number of threads to cap factor-based parallelism number to
    parallelism-min = 8

    # Max number of threads to cap factor-based parallelism number to
    parallelism-max = 64
  }
}

#XING
# ~~~~~
xing.request_code.url = "https://api.xing.com/v1/request_token"
xing.login.redirect.uri = "http://localhost:9000"${?play.http.context}"/xing/code2tokenX"
xing.cod2accestoken.url = "https://api.xing.com/v1/access_token"
xing.authorize.url = "https://api.xing.com/v1/authorize"
xing.search.url = "https://api.xing.com:/v1/users/find.json"
xing.search.fields = "id,display_name,first_name,last_name,photo_urls.large,permalink,academic_title,employment_status,gender,birth_date,active_email,interests,languages,web_profiles,page_name,wants,haves,top_haves,interests,organisation_member,private_address,business_address,instant_messaging_accounts,professional_experience.primary_company,educational_background.degree,educational_background.qualifications"
xing.app.key = ""
xing.app.secret = ""

#Social Search
socialsearch.search.url = "https://api.social-searcher.com/v2/search"
socialsearch.search.api_key = ""

#VK
vk.request_code.url = "https://oauth.vk.com/authorize"
vk.app.key = ""
vk.api.version = "5.69"
vk.login.redirect.uri = "http://localhost:9000"${?play.http.context}
vk.search.url = "https://api.vk.com/method/users.search"
vk.search.fields = "uid,first_name,last_name,bdate,screen_name,sex,city,country,photo_50,timezone,last_seen,verified"

#Google Custom Search
gcs.search.url = "https://www.googleapis.com/customsearch/v1"
gcs.search.engine.id = ""
gcs.search.api.key = ""

#WS Request Timeout
play.ws.timeout.connection = 5000
play.ws.timeout.idle = 100000
fuhsen.wrapper.request.timeout = 10000
fuhsen.engine.request.timeout = 120000

#PIPL
pipl.url = ""
pipl.app.key = ""

#ENABLING LOGGIN MESSAGES for Organizations, Locations, and Results Graph
fuhsen.logger.messages.enabled = false

#MERGE FUNCTIONALY
fuhsen.rdf.merge.enabled = true
fuhsen.rdf.merge.auto.enabled = false

#GRAPH VIEW
fuhsen.view.graph.enabled = true

#TRIPLE STORE Settings
dydra.token = ""
store.endpoint.service.url = "http://dydra.com/collarad/fuhsen/service?auth_token="${?dydra.token}
store.endpoint.sparql.url = "http://dydra.com/collarad/fuhsen/sparql?auth_token="${?dydra.token}
store.favorites.graph.uri = "http://www.lidakra-project.de/fuhsen"
store.same.graph.uri = "http://www.lidakra-project.de/same"

#Export Settings
#fuhsen.rdf.export.type = "xlsx"
fuhsen.rdf.export.type = "csv"
